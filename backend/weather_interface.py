# weather_interface.py

from mml_forcast import load_data, create_features, preprocess, train_models, predict_sample
import pandas as pd

def run_interface():
    print("=== Welcome to Weather Predictor Interface ===\n")
    
    filepath = "weather.csv"
    
    try:
        # 1. –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
        df = load_data(filepath)
    except FileNotFoundError:
        print(f"Error: –§–∞–π–ª '{filepath}' –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ç–æ–π –∂–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏.")
        return

    # 2. –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤
    df = create_features(df)

    # 3. –ü—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∞
    X_scaled, y, scaler = preprocess(df)

    # 4. –û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–µ–π
    lr_model, rf_model = train_models(X_scaled, y)

    print("\n–ú–æ–¥–µ–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±—É—á–µ–Ω–∞. –ì–æ—Ç–æ–≤ –∫ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è–º!\n")

    # 5. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –≤–≤–æ–¥
    while True:
        answer = input("\n–•–æ—Ç–∏—Ç–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞—Ç—å —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É –¥–ª—è –Ω–æ–≤–æ–π –¥–∞—Ç—ã? (yes/no): ").strip().lower()
        if answer != 'yes':
            print("–í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã. –°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ.")
            break

        try:
            # –í–≤–æ–¥ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
            humidity = float(input("–í–≤–µ–¥–∏—Ç–µ –≤–ª–∞–∂–Ω–æ—Å—Ç—å (–≤ %): "))
            pressure = float(input("–í–≤–µ–¥–∏—Ç–µ –¥–∞–≤–ª–µ–Ω–∏–µ (–≤ hPa): "))
            wind_speed = float(input("–í–≤–µ–¥–∏—Ç–µ —Å–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ (–º/—Å): "))
            month = int(input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –º–µ—Å—è—Ü–∞ (1-12): "))
            day = int(input("–í–≤–µ–¥–∏—Ç–µ –¥–µ–Ω—å –º–µ—Å—è—Ü–∞ (1-31): "))
            weekday = int(input("–í–≤–µ–¥–∏—Ç–µ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ (0 ‚Äî –ü–Ω, 6 ‚Äî –í—Å): "))

            # –°–æ–∑–¥–∞–Ω–∏–µ DataFrame –¥–ª—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è
            user_sample = pd.DataFrame([{
                'humidity': humidity,
                'pressure': pressure,
                'wind_speed': wind_speed,
                'month': month,
                'day': day,
                'weekday': weekday
            }])

            # –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ
            user_scaled = scaler.transform(user_sample)

            # –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ
            prediction = rf_model.predict(user_scaled)
            print(f"\nüå§ –ü—Ä–æ–≥–Ω–æ–∑–∏—Ä—É–µ–º–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {round(prediction[0], 2)} ¬∞C")

        except Exception as e:
            print("–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö:", e)
            continue

if __name__ == "__main__":
    run_interface()
